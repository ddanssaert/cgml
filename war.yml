# yaml-language-server: $schema=./cgml.schema.json
cgml_version: 1.2
meta:
  name: "War"
  author: "Traditional"
  description: "The goal is to win all 52 cards."
  players:
    min: 2
    max: 2

#imports:
#  - !include 'https://cgml.io/core-components/v1/standard_deck.yaml'
#  - !include 'https://cgml.io/core-components/v1/zones.yaml'
components:
  component_types:
    deck_types:
      standard_52:
        composition:
          - type: template
            template: standard_suits
            values: [2,3,4,5,6,7,8,9,10,J,Q,K,A]
        rank_hierarchy: [2,3,4,5,6,7,8,9,10,J,Q,K,A]
    zone_types:
      draw_pile:
        ordering: shuffled
        visibility:
          all: count_only
      player_hand:
        ordering: unordered
        visibility:
          owner: all
          others: count_only
      play_pile:
        ordering: lifo
        visibility:
          all: all
      winnings_pile:
        ordering: fifo
        visibility:
          all: hidden
      discard_pile:
        ordering: lifo
        visibility:
          all: top_card_only
      book_area:
        ordering: unordered
        visibility:
          all: all

  decks:
    main_deck:
      type: standard_52

  zones:
    - name: deck
      type: draw_pile
      of_deck: main_deck
    - name: player_deck
      type: draw_pile
      per_player: true
    - name: play_area
      type: play_pile
      per_player: true
    - name: winnings
      type: winnings_pile
      per_player: true

setup:
  - action: SHUFFLE
    target: zones.deck
  - action: DEAL_ALL
    from_deck: main_deck
    to: zones.zones.player_deck

flow:
  states:
    Playing:
      phases: [Replenish1, Replenish2, FlipCard, Compare]
    War:
      phases: [Replenish1, Replenish2, BeginWar, WarCompare]
    GameOver:
      phases: []
  initial_state: Playing
  player_order: simultaneous

  transitions:
    - from: Playing
      to: GameOver
      condition:
        or:
          - isEqual:
              - sum:
                  - path: players.0.zones.player_deck.card_count
                  - path: players.0.zones.winnings.card_count
                  - path: players.0.zones.play_area.card_count
              - value: 0
          - isEqual:
              - sum:
                  - path: players.1.zones.player_deck.card_count
                  - path: players.1.zones.winnings.card_count
                  - path: players.1.zones.play_area.card_count
              - value: 0
    - from: War
      to: GameOver
      condition:
        or:
          - isLessThan:
              - sum:
                  - path: players.0.zones.player_deck.card_count
                  - path: players.0.zones.winnings.card_count
                  - path: players.0.zones.play_area.card_count
              - value: 4
          - isLessThan:
              - sum:
                  - path: players.1.zones.player_deck.card_count
                  - path: players.1.zones.winnings.card_count
                  - path: players.1.zones.play_area.card_count
              - value: 4

  win_condition:
    evaluator:
      max:
        - add:
            - path: players.0.zones.player_deck.card_count
            - path: players.0.zones.winnings.card_count
        - add:
            - path: players.1.zones.player_deck.card_count
            - path: players.1.zones.winnings.card_count
rules:
  - id: flip_cards
    trigger: on.phase.FlipCard
    effect:
      - action: MOVE
        from: players.0.zones.player_deck
        to: players.0.zones.play_area
        count: 1
      - action: MOVE
        from: players.1.zones.player_deck
        to: players.1.zones.play_area
        count: 1

  - id: compare_cards_p1_wins
    trigger: on.phase.Compare
    condition:
      isGreaterThan:
        - path: players.0.zones.play_area.top_card.properties.rank
        - path: players.1.zones.play_area.top_card.properties.rank
    effect:
      - action: MOVE
        from: players.0.zones.play_area
        to: players.0.zones.winnings
        count: 1
      - action: MOVE
        from: players.1.zones.play_area
        to: players.0.zones.winnings
        count: 1

  - id: compare_cards_p2_wins
    trigger: on.phase.Compare
    condition:
      isGreaterThan:
        - path: players.1.zones.play_area.top_card.properties.rank
        - path: players.0.zones.play_area.top_card.properties.rank
    effect:
      - action: MOVE
        from: players.0.zones.play_area
        to: players.1.zones.winnings
        count: 1
      - action: MOVE
        from: players.1.zones.play_area
        to: players.1.zones.winnings
        count: 1

  - id: compare_cards_tie
    trigger: on.phase.Compare
    condition:
      isEqual:
        - path: players.0.zones.play_area.top_card.properties.rank
        - path: players.1.zones.play_area.top_card.properties.rank
    effect:
      - action: SET_GAME_STATE
        state: War

  - id: begin_war
    trigger: on.phase.BeginWar
    effect:
      - action: MOVE
        from: players.0.zones.player_deck
        to: players.0.zones.play_area
        count: 3
      - action: MOVE
        from: players.1.zones.player_deck
        to: players.1.zones.play_area
        count: 3
      - action: MOVE
        from: players.0.zones.player_deck
        to: players.0.zones.play_area
        count: 1
      - action: MOVE
        from: players.1.zones.player_deck
        to: players.1.zones.play_area
        count: 1

  - id: war_compare_p1_win
    trigger: on.phase.WarCompare
    condition:
      isGreaterThan:
        - path: players.0.zones.play_area.top_card.properties.rank
        - path: players.1.zones.play_area.top_card.properties.rank
    effect:
      - action: MOVE_ALL
        from: players.0.zones.play_area
        to: players.0.zones.winnings
      - action: MOVE_ALL
        from: players.1.zones.play_area
        to: players.0.zones.winnings
      - action: SET_GAME_STATE
        state: Playing

  - id: war_compare_p2_win
    trigger: on.phase.WarCompare
    condition:
      isGreaterThan:
        - path: players.1.zones.play_area.top_card.properties.rank
        - path: players.0.zones.play_area.top_card.properties.rank
    effect:
      - action: MOVE_ALL
        from: players.0.zones.play_area
        to: players.1.zones.winnings
      - action: MOVE_ALL
        from: players.1.zones.play_area
        to: players.1.zones.winnings
      - action: SET_GAME_STATE
        state: Playing

  - id: war_compare_tie
    trigger: on.phase.WarCompare
    condition:
      isEqual:
        - path: players.0.zones.play_area.top_card.properties.rank
        - path: players.1.zones.play_area.top_card.properties.rank
    effect:
      - action: SET_GAME_STATE
        state: War     # Repeats the war sequence

  - id: replenish_deck_from_winnings_p1_replenish
    trigger: on.phase.Replenish1
    condition:
      and:
        - isEqual:
            - path: players.0.zones.player_deck.card_count
            - value: 0
        - isGreaterThan:
            - path: players.0.zones.winnings.card_count
            - value: 0
    effect:
      - action: MOVE_ALL
        from: players.0.zones.winnings
        to: players.0.zones.player_deck
      - action: SHUFFLE
        target: players.0.zones.player_deck

  - id: replenish_deck_from_winnings_p2_replenish
    trigger: on.phase.Replenish2
    condition:
      and:
        - isEqual:
            - path: players.1.zones.player_deck.card_count
            - value: 0
        - isGreaterThan:
            - path: players.1.zones.winnings.card_count
            - value: 0
    effect:
      - action: MOVE_ALL
        from: players.1.zones.winnings
        to: players.1.zones.player_deck
      - action: SHUFFLE
        target: players.1.zones.player_deck
